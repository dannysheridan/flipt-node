/**
 * This file auto-generated by Fern from our API Definition.
 */

import { FliptApi } from "../../..";

export interface fliptMatchType<RawValue extends fliptMatchType.RawValue = fliptMatchType.RawValue> {
  value: RawValue;
  visit: <_Result>(visitor: FliptApi.segments.fliptMatchType._Visitor<_Result>) => _Result;
}

const _AllMatchType: fliptMatchType<"ALL_MATCH_TYPE"> = {
  value: "ALL_MATCH_TYPE",
  visit: (visitor) => visitor.allMatchType(),
};
const _AnyMatchType: fliptMatchType<"ANY_MATCH_TYPE"> = {
  value: "ANY_MATCH_TYPE",
  visit: (visitor) => visitor.anyMatchType(),
};
export const fliptMatchType = {
  AllMatchType: _AllMatchType,
  AnyMatchType: _AnyMatchType,
  _parse: (value: string): fliptMatchType => {
    switch (value) {
      case "ALL_MATCH_TYPE": {
        return _AllMatchType;
      }
      case "ANY_MATCH_TYPE": {
        return _AnyMatchType;
      }
      default: {
        return {
          value: value as fliptMatchType.RawValue,
          visit: (visitor) => visitor._other(value),
        };
      }
    }
  },
} as const;

export declare namespace fliptMatchType {
  type RawValue = "ALL_MATCH_TYPE" | "ANY_MATCH_TYPE";

  interface _Visitor<_Result> {
    allMatchType: () => _Result;
    anyMatchType: () => _Result;
    _other: (value: string) => _Result;
  }
}
