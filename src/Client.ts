/**
 * This file auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Client as AuthClient } from "./resources/auth/client/Client";
import { Client as ConstraintsClient } from "./resources/constraints/client/Client";
import { Client as DistributionsClient } from "./resources/distributions/client/Client";
import { Client as EvaluateClient } from "./resources/evaluate/client/Client";
import { Client as FlagsClient } from "./resources/flags/client/Client";
import { Client as RulesClient } from "./resources/rules/client/Client";
import { Client as SegmentsClient } from "./resources/segments/client/Client";
import { Client as VariantsClient } from "./resources/variants/client/Client";

export declare namespace FliptApiClient {
  interface Options {
    environment?: environments.Environment | string;
    auth?: {
      token?: core.Supplier<core.BearerToken>;
    };
  }
}

export class FliptApiClient {
  constructor(private readonly options: FliptApiClient.Options) {}

  #auth: AuthClient | undefined;

  public get auth(): AuthClient {
    return (this.#auth ??= new AuthClient(this.options));
  }

  #constraints: ConstraintsClient | undefined;

  public get constraints(): ConstraintsClient {
    return (this.#constraints ??= new ConstraintsClient(this.options));
  }

  #distributions: DistributionsClient | undefined;

  public get distributions(): DistributionsClient {
    return (this.#distributions ??= new DistributionsClient(this.options));
  }

  #evaluate: EvaluateClient | undefined;

  public get evaluate(): EvaluateClient {
    return (this.#evaluate ??= new EvaluateClient(this.options));
  }

  #flags: FlagsClient | undefined;

  public get flags(): FlagsClient {
    return (this.#flags ??= new FlagsClient(this.options));
  }

  #rules: RulesClient | undefined;

  public get rules(): RulesClient {
    return (this.#rules ??= new RulesClient(this.options));
  }

  #segments: SegmentsClient | undefined;

  public get segments(): SegmentsClient {
    return (this.#segments ??= new SegmentsClient(this.options));
  }

  #variants: VariantsClient | undefined;

  public get variants(): VariantsClient {
    return (this.#variants ??= new VariantsClient(this.options));
  }
}
