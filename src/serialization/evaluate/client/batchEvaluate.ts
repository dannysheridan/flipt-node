/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { FliptApi } from "@flipt-io/flipt";
import * as core from "../../../core";

export const Request: core.schemas.Schema<
  serializers.evaluate.batchEvaluate.Request.Raw,
  FliptApi.BatchEvaluationRequest
> = core.schemas.object({
  requestId: core.schemas.string().optional(),
  requests: core.schemas.list(core.schemas.lazyObject(async () => (await import("../..")).EvaluationRequest)),
  excludeNotFound: core.schemas.boolean().optional(),
});

export declare namespace Request {
  interface Raw {
    requestId?: string | null;
    requests: serializers.EvaluationRequest.Raw[];
    excludeNotFound?: boolean | null;
  }
}

export const Response: core.schemas.Schema<
  serializers.evaluate.batchEvaluate.Response.Raw,
  FliptApi.BatchEvaluationResponse
> = core.schemas.lazyObject(async () => (await import("../..")).BatchEvaluationResponse);

export declare namespace Response {
  type Raw = serializers.BatchEvaluationResponse.Raw;
}
