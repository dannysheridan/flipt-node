/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { FliptApi } from "@flipt-io/flipt";
import * as core from "../../../core";

export const EvaluationResponse: core.schemas.ObjectSchema<
  serializers.EvaluationResponse.Raw,
  FliptApi.EvaluationResponse
> = core.schemas.object({
  requestId: core.schemas.string(),
  entityId: core.schemas.string(),
  requestContext: core.schemas.record(core.schemas.string(), core.schemas.string()),
  match: core.schemas.boolean(),
  flagKey: core.schemas.string(),
  segmentKey: core.schemas.string(),
  timestamp: core.schemas.date(),
  value: core.schemas.string(),
  requestDurationMillis: core.schemas.number(),
  attachment: core.schemas.string(),
  reason: core.schemas.lazy(async () => (await import("../..")).EvaluationReason),
});

export declare namespace EvaluationResponse {
  interface Raw {
    requestId: string;
    entityId: string;
    requestContext: Record<string, string>;
    match: boolean;
    flagKey: string;
    segmentKey: string;
    timestamp: string;
    value: string;
    requestDurationMillis: number;
    attachment: string;
    reason: serializers.EvaluationReason.Raw;
  }
}
