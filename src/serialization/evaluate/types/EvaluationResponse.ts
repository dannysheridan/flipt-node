/**
 * This file auto-generated by Fern from our API Definition.
 */

import { FliptApi } from "@fern-api/flipt";
import * as core from "../../../core";
import * as serializers from "../..";

export const EvaluationResponse: core.schemas.ObjectSchema<EvaluationResponse.Raw, FliptApi.EvaluationResponse> =
  core.schemas.object({
    requestId: core.schemas.string(),
    entityId: core.schemas.string(),
    requestContext: core.schemas.string(),
    match: core.schemas.boolean(),
    flagKey: core.schemas.string(),
    segmentKey: core.schemas.string(),
    timestamp: core.schemas.date(),
    value: core.schemas.string(),
    requestDurationMillis: core.schemas.number(),
    attachment: core.schemas.string(),
    reasons: core.schemas.lazy(async () => (await import("../..")).EvaluationReason),
  });

export declare namespace EvaluationResponse {
  interface Raw {
    requestId: string;
    entityId: string;
    requestContext: string;
    match: boolean;
    flagKey: string;
    segmentKey: string;
    timestamp: string;
    value: string;
    requestDurationMillis: number;
    attachment: string;
    reasons: serializers.EvaluationReason.Raw;
  }
}
