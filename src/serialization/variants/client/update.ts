/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { FliptApi } from "@flipt-io/flipt";
import * as core from "../../../core";

export const Request: core.schemas.Schema<serializers.variants.update.Request.Raw, FliptApi.VariantUpdateRequest> =
  core.schemas.object({
    key: core.schemas.string(),
    name: core.schemas.string().optional(),
    description: core.schemas.string().optional(),
    attachment: core.schemas.string().optional(),
  });

export declare namespace Request {
  interface Raw {
    key: string;
    name?: string | null;
    description?: string | null;
    attachment?: string | null;
  }
}

export const Response: core.schemas.Schema<serializers.variants.update.Response.Raw, FliptApi.Variant> =
  core.schemas.lazyObject(async () => (await import("../..")).Variant);

export declare namespace Response {
  type Raw = serializers.Variant.Raw;
}
