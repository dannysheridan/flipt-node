/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { FliptApi } from "@flipt-io/flipt";
import * as core from "../../../../core";

export const EvaluationResponse: core.serialization.ObjectSchema<
    serializers.evaluation.EvaluationResponse.Raw,
    FliptApi.evaluation.EvaluationResponse
> = core.serialization.object({
    type: core.serialization.lazy(async () => (await import("../../..")).evaluation.EvaluationResponseType),
    booleanResponse: core.serialization.property(
        "boolean_response",
        core.serialization
            .lazyObject(async () => (await import("../../..")).evaluation.BooleanEvaluationResponse)
            .optional()
    ),
    variantResponse: core.serialization.property(
        "variant_response",
        core.serialization
            .lazyObject(async () => (await import("../../..")).evaluation.VariantEvaluationResponse)
            .optional()
    ),
    errorResponse: core.serialization.property(
        "error_response",
        core.serialization
            .lazyObject(async () => (await import("../../..")).evaluation.ErrorEvaluationResponse)
            .optional()
    ),
});

export declare namespace EvaluationResponse {
    interface Raw {
        type: serializers.evaluation.EvaluationResponseType.Raw;
        boolean_response?: serializers.evaluation.BooleanEvaluationResponse.Raw | null;
        variant_response?: serializers.evaluation.VariantEvaluationResponse.Raw | null;
        error_response?: serializers.evaluation.ErrorEvaluationResponse.Raw | null;
    }
}
